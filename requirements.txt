# 🏦 Loan Approval Prediction using Machine Learning

## 📌 Project Overview
Banks and financial institutions receive thousands of loan applications daily. Manually verifying and approving loans is **time-consuming, prone to bias, and inconsistent**.  

This project uses **Machine Learning (ML)** to build a predictive model that determines whether a loan application should be **approved or rejected** based on applicant details such as income, employment, credit history, and loan amount.  

The goal is to **automate the loan approval process**, improve efficiency, and reduce risks for banks while providing quick decisions for customers.  

---

## 🎯 Objectives
- Analyze applicant data to understand key factors influencing loan approvals.  
- Preprocess and clean data (handle missing values, encode categorical variables).  
- Train multiple ML models (Logistic Regression, Random Forest, SVM, KNN).  
- Evaluate models using accuracy, precision, recall, and F1-score.  
- Deploy the best-performing model for real-world use.  

---

## 📊 Dataset
The dataset contains information about applicants and whether their loan was approved.  

| Feature | Description |
|---------|-------------|
| **Loan_ID** | Unique loan identifier |
| **Gender** | Male / Female |
| **Married** | Marital status |
| **Dependents** | Number of dependents |
| **Education** | Graduate / Not Graduate |
| **Self_Employed** | Employment type |
| **ApplicantIncome** | Income of applicant |
| **CoapplicantIncome** | Income of co-applicant |
| **LoanAmount** | Loan amount requested |
| **Loan_Amount_Term** | Term of loan repayment (in months) |
| **Credit_History** | Credit history (1 = good, 0 = bad) |
| **Property_Area** | Urban / Semi-Urban / Rural |
| **Loan_Status** | Target variable (Y = Approved, N = Rejected) |

---

## ⚙️ Workflow
1. **Data Preprocessing**
   - Handle missing values  
   - Encode categorical variables using Label Encoding / One-Hot Encoding  
   - Feature scaling (for KNN, SVM models)  

2. **Exploratory Data Analysis (EDA)**
   - Visualize distributions of features  
   - Check correlations  
   - Identify important features (e.g., Credit_History, Income)  

3. **Model Building**
   - Train multiple ML algorithms:  
     - Logistic Regression  
     - Random Forest Classifier  
     - Support Vector Classifier (SVC)  
     - K-Nearest Neighbors (KNN)  

4. **Evaluation**
   - Compare models on **accuracy, precision, recall, F1-score**  
   - Random Forest achieved the best test accuracy (~82–85%)  

5. **Deployment (Optional)**
   - Deploy as a **Flask/Django web app**  
   - User inputs applicant details → Model predicts loan approval status  

---

## 🚀 Technologies Used
- **Python 3**  
- **Libraries:**  
  - pandas, numpy → Data preprocessing  
  - matplotlib, seaborn → Data visualization  
  - scikit-learn → Machine learning models & evaluation  
  - Flask/Streamlit (optional) → Deployment  

---

## 📈 Results
- **Best Model:** Random Forest Classifier  
- **Test Accuracy:** ~82–85%  
- **Key Factors influencing loan approval:**  
  - Credit History  
  - Applicant & Co-applicant Income  
  - Loan Amount & Term  
  - Property Area  

---

## 📂 Project Structure
